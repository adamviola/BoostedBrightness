plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'maven-publish'
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        url "https://maven.terraformersmc.com/releases/"
    }
	maven { 
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	//Fabric api
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

	// ModMenu
	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

    // Sodium
	modImplementation "maven.modrinth:sodium:${project.sodium_version}"
	implementation "org.joml:joml:1.10.2" // Needed for Sodium
}

processResources {
	def expandProps = [
			"version": version,
			"maven_group": project.group,
			"minecraft_version": minecraft_version,
			"min_minecraft_version": min_minecraft_version,
			"modmenu_version": modmenu_version
	]

	filesMatching(['fabric.mod.json']) {
		expand expandProps
	}
	inputs.properties(expandProps)
}

loom {
	accessWidenerPath = file("src/main/resources/boostedbrightness.accesswidener")
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
